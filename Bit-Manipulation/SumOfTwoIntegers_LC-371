class Solution {
    public int getSum(int a, int b) {
        
        //int xor = 0;
        int i = 0;
        int sum = 0;
        //int carry = 0;
        
       // if(a < 0) a = ~a + 1;
       // if(b < 0) b = ~b + 1;
        
//         while(a != 0 || b != 0) {
//             xor = (a & 1) ^ (b & 1) ^ carry;
//             sum += xor * Math.pow(2,i++);
//             if((((a & 1) & (b & 1)) == 1) || ((carry & (b & 1)) == 1) || ((carry & (a & 1)) == 1)) {
//                 carry = 1;
//             } else carry = 0;
//             a >>= 1;
//             b >>= 1;
//         }
        
//         sum += carry * Math.pow(2,i);
//         return sum;
        int xor = a ^ b;
        int and = a & b;
        int res = 0;
        
        while(and != 0) {
            and <<= 1;
            res = and ^ xor;
            and = and & xor;
            xor = res;
        } 
        return xor;
    }
}


//https://leetcode.com/problems/sum-of-two-integers/
